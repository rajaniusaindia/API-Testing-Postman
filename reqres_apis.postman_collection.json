{
	"info": {
		"_postman_id": "cb73a24d-af0e-433c-9a79-a74d54ca4174",
		"name": "reqres_apis",
		"description": "This is the collection for the application reqres.in which contains all the CRUD operation on these apis",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28517041",
		"_collection_link": "https://solar-eclipse-381595.postman.co/workspace/APIBatch07~9753fed7-8221-413a-ab4b-d8eb7d330339/collection/28517041-cb73a24d-af0e-433c-9a79-a74d54ca4174?action=share&source=collection_link&creator=28517041"
	},
	"item": [
		{
			"name": "reqres_get_apis",
			"item": [
				{
					"name": "get_list_all_users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_single_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(400);",
									"});",
									"pm.test(\"First name check - way 1\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Janet\");",
									"});",
									"pm.test(\"First name check - way 2\", function () {",
									"    var x = pm.response.json();",
									"    pm.expect(x.data.first_name).to.eql(\"Janet\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"https://reqres.in/#support-heading\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_list_resource_unknown",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/unknown",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"unknown"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_users_page=2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"pm.test(\"Page number validation\", function () {",
									"    var x = pm.response.json();",
									"    pm.expect(x.page).to.eql(2);",
									"});",
									"pm.test(\"Per Page validation\", function () {",
									"    var x = pm.response.json();",
									"    pm.expect(x.per_page).to.eql(6);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users?page=2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Collection of Get apis to get user information"
		},
		{
			"name": "resreq_post_apis",
			"item": [
				{
					"name": "post_create_resource",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User created Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Body contains a String - createdAt\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"createdAt\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Rajani\",\n    \"job\": \"Automation Lead\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "create_random_user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{$randomFirstName}}\",\n    \"job\": \"{{$randomJobTitle}}\",\n    \"guid\": \"{{$guid}}\",\n    \"city\": \"{{$randomCity}}\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			],
			"description": "Collection of POST apis to create user information"
		},
		{
			"name": "reqres_update_apis",
			"item": [
				{
					"name": "put_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"updatedAt\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"morpheus\",\n    \"job\": \"zion resident\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"updatedAt\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Shantosh\",\n    \"job\": \"Automation Manager\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				}
			],
			"description": "Collection of Update apis user information"
		},
		{
			"name": "resreq_delete_apis",
			"item": [
				{
					"name": "delete_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User deleted successfully - Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/7307964",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"7307964"
							]
						}
					},
					"response": []
				}
			],
			"description": "Collection of Delete apis to delete user information",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						]
					}
				}
			]
		},
		{
			"name": "json_validator",
			"item": [
				{
					"name": "get_user_schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {",
									"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"default\": {},",
									"    \"title\": \"Root Schema\",",
									"    \"required\": [",
									"        \"data\",",
									"        \"support\"",
									"    ],",
									"    \"properties\": {",
									"        \"data\": {",
									"            \"type\": \"object\",",
									"            \"default\": {},",
									"            \"title\": \"The data Schema\",",
									"            \"required\": [",
									"                \"id\",",
									"                \"email\",",
									"                \"first_name\",",
									"                \"last_name\",",
									"                \"avatar\"",
									"            ],",
									"            \"properties\": {",
									"                \"id\": {",
									"                    \"type\": \"integer\",",
									"                    \"default\": 0,",
									"                    \"title\": \"The id Schema\",",
									"                    \"examples\": [",
									"                        2",
									"                    ]",
									"                },",
									"                \"email\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The email Schema\",",
									"                    \"examples\": [",
									"                        \"janet.weaver@reqres.in\"",
									"                    ]",
									"                },",
									"                \"first_name\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The first_name Schema\",",
									"                    \"examples\": [",
									"                        \"Janet\"",
									"                    ]",
									"                },",
									"                \"last_name\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The last_name Schema\",",
									"                    \"examples\": [",
									"                        \"Weaver\"",
									"                    ]",
									"                },",
									"                \"avatar\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The avatar Schema\",",
									"                    \"examples\": [",
									"                        \"https://reqres.in/img/faces/2-image.jpg\"",
									"                    ]",
									"                }",
									"            },",
									"            \"examples\": [{",
									"                \"id\": 2,",
									"                \"email\": \"janet.weaver@reqres.in\",",
									"                \"first_name\": \"Janet\",",
									"                \"last_name\": \"Weaver\",",
									"                \"avatar\": \"https://reqres.in/img/faces/2-image.jpg\"",
									"            }]",
									"        },",
									"        \"support\": {",
									"            \"type\": \"object\",",
									"            \"default\": {},",
									"            \"title\": \"The support Schema\",",
									"            \"required\": [",
									"                \"url\",",
									"                \"text\"",
									"            ],",
									"            \"properties\": {",
									"                \"url\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The url Schema\",",
									"                    \"examples\": [",
									"                        \"https://reqres.in/#support-heading\"",
									"                    ]",
									"                },",
									"                \"text\": {",
									"                    \"type\": \"string\",",
									"                    \"default\": \"\",",
									"                    \"title\": \"The text Schema\",",
									"                    \"examples\": [",
									"                        \"To keep ReqRes free, contributions towards server costs are appreciated!\"",
									"                    ]",
									"                }",
									"            },",
									"            \"examples\": [{",
									"                \"url\": \"https://reqres.in/#support-heading\",",
									"                \"text\": \"To keep ReqRes free, contributions towards server costs are appreciated!\"",
									"            }]",
									"        }",
									"    },",
									"    \"examples\": [{",
									"        \"data\": {",
									"            \"id\": 2,",
									"            \"email\": \"janet.weaver@reqres.in\",",
									"            \"first_name\": \"Janet\",",
									"            \"last_name\": \"Weaver\",",
									"            \"avatar\": \"https://reqres.in/img/faces/2-image.jpg\"",
									"        },",
									"        \"support\": {",
									"            \"url\": \"https://reqres.in/#support-heading\",",
									"            \"text\": \"To keep ReqRes free, contributions towards server costs are appreciated!\"",
									"        }",
									"    }]",
									"}",
									"",
									"// it requires JavaScript so hit enter after last {} and write your ",
									"// From snippet - Add - Use Tiny Validator for JSON data",
									"// remove upper portion - not working enitire thing - wrote own function",
									"",
									"pm.test('Schema is valid', function () {",
									"    var  responseData = pm.response.json();",
									"    pm.expect(tv4.validate(responseData,schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "New Request",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	]
}